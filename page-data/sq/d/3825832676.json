{"data":{"projects":{"edges":[{"node":{"frontmatter":{"title":"Resume Parser","tech":["Python","SpaCy","NER Training"],"github":"https://github.com/riya1606/NLP_Resume_Parser","external":"https://github.com/riya1606/NLP_Resume_Parser"},"html":"<p>Designed and implemented a resume parser which takes in resume and keywords as input and lists the best candidates in sorted order.It is implemented in Python using NER training with SpaCy. Cosine similarity is used for ranking the resumes.</p>"}},{"node":{"frontmatter":{"title":"COVID Health Application","tech":["Python","FbProphet","Visualization"],"github":"https://github.com/riya1606/Health_Prediction_Covid","external":"https://github.com/riya1606/Health_Prediction_Covid"},"html":"<p>A clear visualization of multiple factors involved in Covid-19 at National and Global Level. Have trained prediction model using FbProphet and compared with other Time Series Model. Used Medical Imaging Data to check preconditions that lead to Covid-19.</p>"}},{"node":{"frontmatter":{"title":"Image Outpainting","tech":["Python","Deep Convolutional GANs"],"github":"https://github.com/riya1606/Image_Outpainting","external":"https://github.com/riya1606/Image_Outpainting"},"html":"<p>Designed and Implemented Image Outpainting using Deep Convolutional Generative Adversarial Networks which extends the image to unknown areas in such a way that it appears realistic to human eyes and blends well with original picture. Implemented this using Python and its multiple libraries.</p>"}},{"node":{"frontmatter":{"title":"Linux C Shell","tech":["C"],"github":"https://github.com/riya1606/Linux-C-Shell","external":"https://github.com/riya1606/Linux-C-Shell/"},"html":"<p>This shell is a complete working linux shell. It supports most linux shell functionalities including semicolon separated commands, piping, redirection, and all basic linux commands etc. Foreground and Background processes can also be executed.</p>"}},{"node":{"frontmatter":{"title":"Farmery","tech":["JavaScript","MongoDB","ExpressJS"],"github":"https://github.com/riya1606/Farmery","external":"https://github.com/riya1606/Farmery"},"html":"<p>An interactive website made using HTML, CSS, Javascript, MongoDB, ExpressJS, ReactJs and NodeJS to trade fruits, vegetables and other organic products directly from farms with specific detail on the User Interface and Experience.</p>"}},{"node":{"frontmatter":{"title":"Firechat","tech":["Dart","Firebase"],"github":"https://github.com/riya1606/firechat","external":"https://github.com/riya1606/firechat"},"html":"<p>Chatting app using email id for authentication, programmed in Dart (Flutter) and uses Firebase for Backend. Networking Packages are used to make the application run effectively.</p>"}},{"node":{"frontmatter":{"title":"Hospital DBMS","tech":["C++","Data Structures","Algorithms"],"github":"https://github.com/riya1606/dsaproject_hospitalmanagementsystem","external":"https://github.com/riya1606/dsaproject_hospitalmanagementsystem"},"html":"<p>Trillions of bytes of data are being stored in servers around the world. Databases are being used in every aspect of our lives. Implementation of a Hospital Management System database in C++. Project created for Data Structure and Algorithm Course.</p>"}},{"node":{"frontmatter":{"title":"Splitwise","tech":["C++"],"github":"https://github.com/riya1606/splitwise","external":"https://github.com/riya1606/splitwise"},"html":"<p>Implementation of the core splitwise algorithm. Given a number of friends who have to give or take some amount of money from one another. Designed an algorithm by which the total cash flow among all the friends is minimized.</p>"}},{"node":{"frontmatter":{"title":"BTS NGO Website","tech":["HTML","CSS","JavaScript"],"github":null,"external":"https://www.btsngo.co.in/"},"html":"<p>Created a website for BTS NGO as Pro Bono Work.</p>"}},{"node":{"frontmatter":{"title":"Climaa","tech":["Dart","Ruby","Swift"],"github":"https://github.com/riya1606/Climaa","external":"https://github.com/riya1606/Climaa"},"html":"<p>This is a weather app which can help you to find live weather data of any city. Network with Dart http package and used OpenWeatherMap API to get the live weather data and also used geolocator package to get the current location.</p>"}},{"node":{"frontmatter":{"title":"House Prediction","tech":["Python"],"github":"https://github.com/riya1606/House_Price_Prediction","external":"https://github.com/riya1606/House_Price_Prediction"},"html":"<p>In this project, we have harnessed the Melbourne Housing Market dataset from Kaggle, a comprehensive and rich source of real estate data, to develop a robust predictive model. Our primary goal is to assist homebuyers, sellers, and investors in making informed decisions by predicting house prices with high precision. It has an accuracy of 98.23%</p>"}},{"node":{"frontmatter":{"title":"Movie Recommendations","tech":["Python","Collaborative Filtering Model"],"github":"https://github.com/riya1606/Movie_Recommendation","external":"https://github.com/riya1606/Movie_Recommendation"},"html":"<p>Created a Movie Recommendation System using Collaborative Filtering Model.</p>"}}]}}}